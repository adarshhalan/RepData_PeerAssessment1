heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1, centers = 6)
kClust <- kmeans(sub1[,2], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- which(kClust4size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19, ylab = "Laying Cluster")
names(sub1[,3])
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19, ylab = "Walkdown Cluster")
q()
getwd()
library(swirl)
swirl()
dim(pm0)
head(pm0)
names
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character((dates)), "%y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(date)
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, statecode==36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm11, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code = 63, Site.ID = 2008)
pm0sub <- subset(cnt0, County.Code == 6 &, Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 6 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar = c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(h = median(x0sub, na.rm = TRUE), lwd=2)
plot(dates1,x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm == TRUE)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- (pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
mn0 <- c(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
mn0 <- c(pm0, tapply(pm0$Sample.Value, pm0$State.Code, mean, na.rm=TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0,d1, "state")
dim(mrg)
head(mrg)
plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments()
segments(rep(1, 52), mrg[, 2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y, ]
NEI <- readRDS("ExData_Project2/summarySCC_PM25.rds")
SCC <- readRDS("ExData_Project2/Source_Classification_Code.rds")
total_NEI<-tapply(NEI$Emissions, INDEX=NEI$year, sum)
total_NEI<-tapply(NEI$Emissions, INDEX=NEI$year, sum)
hist(total_NEI, main = "Total Emissions by Year", xlab="Year", ylab="Emissions")
barplot(total_NEI, main = "Total Emissions by Year", xlab="Year", ylab="Emissions")
total_NEI<-tapply(NEI$Emissions, INDEX=NEI$year, sum)
hist(total_NEI, main = "Total Emissions by Year", xlab="Year", ylab="Emissions")
barplot(total_NEI, main = "Total Emissions by Year", xlab="Year", ylab="Emissions")
baltimore<-subset(NEI, NEI$fips==24510)
totalBaltimore<-tapply(baltimore$Emissions, INDEX=baltimore$year, sum)
barplot(totalBaltimore, main="Total Emissions in Baltimore, MD by Year", xlab="Year", ylab="Emissions")
Library(ggplot2)
library(ggplot2)
ggp <- ggplot(data=baltimore,aes(factor(year),Emissions,fill=type))
ggp
ggp + geom_bar(stat="identity")
ggp + geom_bar(stat="identity")+ theme_bw() + guides(fill=FALSE)+
ggp + geom_bar(stat="identity") + theme_bw() + guides(fill=FALSE)
facet_grid(.~type,scales = "free",space="free")
ggp + geom_bar(stat="identity") + theme_bw() + guides(fill=FALSE) + facet_grid(.~type,scales = "free",space="free")
ggplot(data=baltimore, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", position="dodge")
ggp + geom_bar(stat="identity") + theme_bw() + guides(fill=FALSE) + facet_grid(.~type)
ggp + geom_bar(stat="identity") + facet_grid(.~type)
ggp + geom_bar(stat="identity") + facet_grid(.~type) + theme_bw()
ggp + geom_bar(stat="identity") + facet_grid(.~type) + theme_bw() + guides(fill=FALSE)
ggplot(data=baltimore, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", position="dodge") + facet_grid(.~type) + theme_bw() +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", position="dodge") + facet_grid(.~type) + theme_bw() + guides(fill=FALSE) + ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Tons)")) +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore, aes(x=year, y=Emissions, fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type) + ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type) +
labs(x="year", y="Total PM"[2.5]*" Emission (Tons)") +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
ggplot(data=baltimore,aes(factor(year),Emissions,fill=type)) +
geom_bar(stat="identity", position="dodge") + theme_bw() + guides(fill=FALSE)+
facet_grid(.~type) +
labs(x="year", y="Total PM2.5 Emission (Tons)") +
ggtitle("Baltimore, MD Emission by Type: 1999-2008")
head(SCC)
head(NEI)
NEISCC <- megrge(NEI, SCC, by="SCC")
NEISCC <- merge(NEI, SCC, by="SCC")
head(NEISCC)
View(NEISCC[1:15])
?grep
?grepl
?unique
coaldata <- grep("coal", SCC$EI.Sector, ignore.case=TRUE)
dim(coaldata)
coaldata
coaldata <- grep("coal", SCC$EI.Sector, ignore.case=TRUE, value = TRUE)
coaldata
coaldata <- unique(grep("coal", SCC$EI.Sector, ignore.case=TRUE, value = TRUE))
coaldata
subcoaldata <- subset(SCC, EI.Sector %in% coaldata)
subcoaldata
View(subcoaldata)
finaldatacoal <- subset(NEI, SCC %in% subcoaldata$SCC)
?%in%
ggplot(data=coal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity") +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
rm("NEISCC")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") + facet_grid(.~type) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") + facet_grid(.~type) + guides(fill=FALSE) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(factor(year), Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") + facet_grid(.~type) + guides(fill=FALSE) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
+     geom_bar(stat="identity", position = "dodge") +
+     ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type))
+     geom_bar(stat="identity", position = "dodge")
+     ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type))
+     geom_bar(stat="identity", position = "dodge")
+     ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=coal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") + facet_grid(.~type) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(factor(year), Emissions, fill = type)) +
geom_bar(stat="identity", position = "dodge") + facet_grid(.~type) + guides(fill=FALSE) +
ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
+     geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE)
+     labs(x="year", y="Emission")
+     ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
+     geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE)
+     labs(x="year", y="Emission") +
+     ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
+     geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE)
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
+ geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE)
+ labs(x="year", y="Emission") + ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) +
+ geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE)
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) + geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE)
ggplot(data=finaldatacoal, aes(x=year, y=Emissions, fill = type)) + geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE) + labs(x="year", y="Emission") + ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=factor(year), y=Emissions, fill = type)) + geom_bar(stat="identity", position = "dodge") + theme_bw() + guides(fill=FALSE) + labs(x="year", y="Emission") + ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
ggplot(data=finaldatacoal, aes(x=factor(year), y=Emissions, fill = type)) + geom_bar(stat="identity", position = "dodge") + theme_bw() + facet_grid(.~type) + guides(fill=FALSE) + labs(x="year", y="Emission") + ggtitle("U.S. Coal Combustion-Related Emissions: 1999-2008")
onroaddata <- subset(NEI, fips == 24510 & type == "ON ROAD" )
onroaddata
onroaddata <- subset(NEI, fips == 24510 & type == 'ON ROAD' )
onroaddata
onroaddata <- subset(NEI, fips==24510 & type=="ON ROAD" )
str(NEI)
head(NEI)
onroaddata <- subset(NEI, fips==24510 & type=="ON-ROAD" )
head(onroaddata)
summary(NEI$type)
head(NEI$type)
View(NEI)
unique(grep("ON-ROAD", NEI$type))
setwd("C:/Users/a/Desktop/Coursera/activity data")
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv("activity.csv", header=TRUE, sep=",", stringsAsFactors = TRUE)
head(data)
str(data)
steps <- aggregate(steps~data, data, func = sum, na.rm = TRUE)
data <- read.csv("activity.csv", header=TRUE, sep=",")
data$date <- as.date(data$date)
data$date <- as.Date(data$date)
str(data)
steps <- aggregate(steps~data, data, func = sum, na.rm = TRUE)
steps <- aggregate(steps~date, data, func = sum, na.rm = TRUE)
steps <- aggregate(steps~date, data, sum, na.rm = TRUE)
head(steps)
str(steps)
View(steps)
plot <- hist(steps$steps)
steps <- aggregate(steps~date, data, sum, na.rm = TRUE)
plot <- ggplot(steps, aes(x=date, y=steps))
p <- plot + geom_h()
p <- plot + geom_histogram()
p
p <- plot(steps$date, steps$steps, type = "h")
p <- plot(steps$date, steps$steps, type = "h", lwd = 8, xlab = "Date", ylab = "Steps per Day")
p <- plot(steps$date, steps$steps, type = "h", lwd = 8, xlab = "Date", ylab = "Steps per Day", col = "blue")
p <- plot(steps$date, steps$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "blue",
main = "Total Steps per Day")
p <- plot(steps$date, steps$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "blue",
main = "Total Steps per Day") + abline(median(steps$steps), col="red", lwd=3)
p <- plot(steps$date, steps$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "blue",
main = "Total Steps per Day") + abline(h = median(steps$steps, na.rm = TRUE), col="red", lwd=2)
meansteps <- mean(steps$steps,na.rm = TRUE)
mediansteps <- median(steps$steps, na.rm = TRUE)
print("Mean Steps = ", meansteps)
print("Median Steps =", mediansteps)
paste("Mean Steps = ", meansteps)
paste("Median Steps =", mediansteps)
View(data)
p <- plot(steps$date, steps$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "gray",
main = "Total Steps per Day") + abline(h = median(steps$steps, na.rm = TRUE), col="red", lwd=2)
p <- plot(steps$date, steps$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "darkgray",
main = "Total Steps per Day") + abline(h = median(steps$steps, na.rm = TRUE), col="red", lwd=2)
steps1 <- aggregate(steps~interval, data, mean, na.rm = TRUE)
View(steps1)
q <- plot(steps~interval, data = steps1, type = "l")
summary(steps)
steps2 <- interval <- data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
q1 <- ggplot(interval, aes(x=interval, y=steps)) + geom_line(color = "red")
q1
steps1
steps1 <- aggregate(steps~interval, data, mean, na.rm = TRUE)
q <- plot(steps~interval, data = steps1, col="blue", type = "l")
abline(h=mean(steps1$steps, na.rm=TRUE), col="red", lwd=2)
q <- plot(steps~interval, data = steps1, col="blue", type = "l",
main = "Average Daily Activity Pattern")
abline(h=mean(steps1$steps, na.rm=TRUE), col="red", lwd=2)
maxinterval <- steps1[which.max(steps1$steps),]
paste("5-Minute interval with Max no of Steps = ", maxinterval)
str(maxinterval)
paste("5-Minute interval with Max no of Steps = ", maxinterval$interval)
paste("5-Minute interval with Max no of Steps = ", maxinterval$interval,
"with no of steps = ", maxinterval$steps)
paste("5-Minute interval with Max no of Steps = ", maxinterval$interval,
"with no of steps = ", round(maxinterval$steps))
summary(data)
stepsna <- sum(is.na(steps$steps))
stepsna
stepsna <- sum(is.na(data$steps))
stepsna
data2 <- data
nadata <- is.na(data2$steps)
avg_interval <- tapply(data2$steps, data2$interval, mean, na.rm=TRUE, simplify = TRUE)
data2$steps[nadata] <- avg_interval[as.character(data2$interval[nadata])]
names(data2)
sum(is.na(data2))
str(data2)
summary(data2)
summary(data)
steps2 <- steps <- aggregate(steps~date, data2, sum, na.rm = TRUE)
steps2
q1 <- plot(steps~interval, data = steps2, col="blue", type = "l",
main = "Average Daily Activity Pattern without NA's")
abline(h=mean(steps2$steps, na.rm=TRUE), col="red", lwd=2)
steps2 <- aggregate(steps~date, data2, sum, na.rm = TRUE)
q1 <- plot(steps~interval, data = steps2, col="blue", type = "l",
main = "Average Daily Activity Pattern without NA's")
abline(h=mean(steps2$steps, na.rm=TRUE), col="red", lwd=2)
steps2
q1 <- plot(steps~date, data = steps2, col="blue", type = "l",
main = "Average Daily Activity Pattern without NA's")
abline(h=mean(steps2$steps, na.rm=TRUE), col="red", lwd=2)
q1 <- plot(steps2$date, steps2$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "darkgray",
main = "Total Steps per Day (w/o NA's") + abline(h = median(steps$steps, na.rm = TRUE), col="red", lwd=2)
q1 <- plot(steps2$date, steps2$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "darkgray",
main = "Total Steps per Day (w/o NA's") +
abline(h = median(steps2$steps, na.rm = TRUE), col="red", lwd=2) +
abline(h = mean(steps2$steps, na.rm = TRUE), col="blue", lwd=2)
q1 <- plot(steps2$date, steps2$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "darkgray",
main = "Total Steps per Day (w/o NA's") +
abline(h = mean(steps2$steps, na.rm = TRUE), col="blue", lwd=2)
str(steps2)
str(data2)
str(data)
stepsdata <- group_by(data2, date) %>% summarise(sum_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
str(stepsdata)
stepsdata
steps
rm("stepsdata")
stepsdata1 <- group_by(data, date) %>% summarise(sum_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
stepsdata2 <- group_by(data2, date) %>% summarise(sum_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
stepsdata1
stepsdata2
sum(is.na(stepsdata1$mean_steps))
sum(is.na(stepsdata1$median_steps))
?if
q1 <- plot(stepsdata2$date, stepsdata2$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = (if(stepsdata2$median_steps > 0 = "red", else ="darkgray")),
main = "Total Steps per Day (w/o NA's)") +
abline(h = mean(stepsdata2$steps, na.rm = TRUE), col="blue", lwd=2)
?condition
q1 <- plot(stepsdata2$date, stepsdata2$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = ifelse(stepsdata2$median_steps>0,'red','darkgrey'),
main = "Total Steps per Day (w/o NA's)") +
abline(h = mean(stepsdata2$steps, na.rm = TRUE), col="blue", lwd=2)
q1 <- plot(stepsdata2$date, stepsdata2$sum_steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = ifelse(stepsdata2$median_steps>0,'red','darkgrey'),
main = "Total Steps per Day (w/o NA's)") +
abline(h = mean(stepsdata2$sum_steps, na.rm = TRUE), col="blue", lwd=2)
meansteps2 <- mean(stepsdata2$sum_steps,na.rm = TRUE)
mediansteps2 <- median(stepsdata2$sum_steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps2)
paste("Median Steps =", mediansteps2)
meansteps1 <- mean(stepsdata1$sum_steps,na.rm = TRUE)
mediansteps1 <- median(stepsdata1$sum_steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps1)
paste("Median Steps =", mediansteps1)
meansteps2 <- mean(data2$steps,na.rm = TRUE)
mediansteps2 <- median(data2$steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps2)
paste("Median Steps =", mediansteps2)
meansteps1 <- mean(data1$steps,na.rm = TRUE)
mediansteps1 <- median(data1$steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps1)
paste("Median Steps =", mediansteps1)
rm(list= ls())
data <- read.csv("activity.csv", header=TRUE, sep=",")
data$date <- as.Date(data$date)
steps <- aggregate(steps~date, data, sum, na.rm = TRUE)
p <- plot(steps$date, steps$steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = "darkgray",
main = "Total Steps per Day") + abline(h = median(steps$steps, na.rm = TRUE), col="red", lwd=2)
meansteps <- mean(steps$steps,na.rm = TRUE)
mediansteps <- median(steps$steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps)
paste("Median Steps =", mediansteps)
summary(steps)
steps1 <- aggregate(steps~interval, data, mean, na.rm = TRUE)
q <- plot(steps~interval, data = steps1, col="blue", type = "l",
main = "Average Daily Activity Pattern")
abline(h=mean(steps1$steps, na.rm=TRUE), col="red", lwd=2)
maxinterval <- steps1[which.max(steps1$steps),]
paste("5-Minute interval with Max no of Steps = ", maxinterval$interval,
"with no of steps = ", round(maxinterval$steps))
stepsna <- sum(is.na(data$steps))
data2 <- data
nadata <- is.na(data2$steps)
avg_interval <- tapply(data2$steps, data2$interval, mean, na.rm=TRUE, simplify = TRUE)
data2$steps[nadata] <- avg_interval[as.character(data2$interval[nadata])]
names(data2)
sum(is.na(data2))
steps2 <- aggregate(steps~date, data2, sum, na.rm = TRUE)
stepsdata1 <- group_by(data, date) %>% summarise(sum_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
stepsdata2 <- group_by(data2, date) %>% summarise(sum_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
q1 <- plot(stepsdata2$date, stepsdata2$sum_steps, type = "h", lwd = 8,
xlab = "Date", ylab = "Steps per Day", col = ifelse(stepsdata2$median_steps>0,'red','darkgrey'),
main = "Total Steps per Day (w/o NA's)") +
abline(h = mean(stepsdata2$sum_steps, na.rm = TRUE), col="blue", lwd=2)
meansteps1 <- mean(steps2$steps,na.rm = TRUE)
mediansteps1 <- median(steps2$steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps)
paste("Median Steps =", mediansteps)
meansteps1 <- mean(data2$steps,na.rm = TRUE)
mediansteps1 <- median(data2$steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps)
paste("Median Steps =", mediansteps)
str(data)
str(data2)
p
p
paste("Mean Steps = ", meansteps1)
paste("Median Steps =", mediansteps1)
meansteps1 <- mean(data2$steps,na.rm = TRUE)
mediansteps1 <- median(data2$steps, na.rm = TRUE)
paste("Mean Steps = ", meansteps1)
paste("Median Steps =", mediansteps1)
mediansteps1 <- median(stepsdata2$sum_steps, na.rm = TRUE)
meansteps1 <- mean(stepsdatadata2$sum_steps,na.rm = TRUE)
meansteps1 <- mean(stepsdata2$sum_steps,na.rm = TRUE)
paste("Mean Steps = ", meansteps1)
paste("Median Steps =", mediansteps1)
paste("Median Steps =", mediansteps2)
summary(data)
summary(data2)
summary(stepsdata1)
summary(stepsdata2)
str(data3)
data3 <- ifelse(weekdays(data2$date) %in% c("Saturday", "Sunday"), "weekend", "weekday")
str(data3)
head(data3,10)
head(data3,20)
tail(data3,20)
tail(data3,200)
tail(data3,300)
data2<- data2 %>%
mutate(typeofday= ifelse(weekdays(data2$date)=="Saturday" | weekdays(data2$date)=="Sunday", "Weekend", "Weekday"))
str(data2)
data2<- data2 %>%
mutate(day= ifelse(weekdays(data2$date)=="Saturday" | weekdays(data2$date)=="Sunday", "Weekend", "Weekday"))
data2$day <- as.factor(data2$day)
head(data2)
str(data2)
plotdata <- data2 %>% group_by(interval, day) %>%
summarise(steps = mean(steps))
s <- ggplot(plotdata, aes(x=interval, y=steps, color = day)) +
geom_line() + facet_wrap(~weektype, ncol = 1, nrow=2)
print(s)
s <- ggplot(plotdata, aes(x=interval, y=steps, color = day)) +
geom_line() + facet_wrap(~day, ncol = 1, nrow=2)
print(s)
s <- ggplot(plotdata, aes(x=interval, y=steps, color = day)) +
geom_line() + facet_wrap(~day, ncol = 1, nrow=2) +
labs(title = "Avg. Daily Steps by Day type", x = "Interval", y = "No. of Steps")
print(s)
rm=(list=ls())
